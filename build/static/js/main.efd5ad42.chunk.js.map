{"version":3,"sources":["Layout/Header.js","Layout/NotFound.js","utils/api/index.js","Layout/home/Helper.js","Layout/home/Deck.js","Layout/home/DeckList.js","Layout/deck/CardStudy.js","Layout/deck/DeckStudy.js","Layout/deck/DeckForm.js","Layout/deck/CreateDeck.js","Layout/card/CardForm.js","Layout/card/CardAdd.js","Layout/card/CardUnit.js","Layout/deck/DeckProfile.js","Layout/deck/DeckEdit.js","Layout/card/CardEdit.js","Layout/index.js","App.js","index.js"],"names":["Header","_jsx","className","children","_jsxs","NotFound","API_BASE_URL","process","headers","Headers","stripCards","deck","cards","_objectWithoutProperties","_excluded","fetchJson","_x","_x2","_x3","_fetchJson","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","options","onCancel","response","wrap","_context","prev","next","fetch","sent","status","Error","concat","statusText","abrupt","json","t0","name","console","error","stack","Promise","resolve","stop","_listDecks","_callee2","signal","_context2","_createDeck","_callee3","_context3","method","body","JSON","stringify","readDeck","_x7","_x8","_readDeck","_callee4","deckId","_context4","_updateDeck","_callee5","updatedDeck","_context5","id","_deleteDeck","_callee6","_context6","_createCard","_callee8","card","_context8","Number","_readCard","_callee9","cardId","_context9","_updateCard","_callee10","updatedCard","_context10","_deleteCard","_callee11","_context11","deleteClickHandler","setError","decks","setDecks","push","window","confirm","_x11","_x12","deleteDeck","then","filter","Deck","_ref","useHistory","buttonStyle","margin","divStyle","display","flexDirection","justifyContent","style","length","description","onClick","type","append","DeckList","_useState","useState","undefined","_useState2","_slicedToArray","useEffect","abortController","AbortController","_x4","listDecks","catch","abort","listForDesks","map","CardStudy","index","lengthOfCards","handleNumber","flip","setFlip","_useState3","front","_useState4","text","setText","back","DeckStudy","useParams","setDeck","_useState5","_useState6","number","setNumber","_getDeck","deckFromAPI","log","getDeck","listCards","array","href","Link","to","DeckForm","onSubmit","_ref$initialState","initialState","changeHandler","_ref2","_ref2$target","target","value","prevState","_objectSpread","_defineProperty","_Fragment","event","preventDefault","stopPropagation","htmlFor","required","placeholder","onChange","rows","CreateDeck","history","goBack","_x5","_x6","createDeck","savedDeck","CardForm","setCard","CardAdd","_x15","_x16","_x17","createCard","CardUnit","setCards","_x22","_x23","deleteCard","DeckProfile","listForCards","DeckEdit","child","_x9","_x10","updateDeck","CardEdit","_useParams","_x18","_x19","readCard","_x20","_x21","updateCard","Layout","Fragment","Switch","Route","exact","path","App","ReactDOM","render","React","StrictMode","Router","document","getElementById"],"mappings":"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","file":"static/js/main.efd5ad42.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <header className=\"jumbotron bg-dark\">\n      <div className=\"container text-white\">\n        <h1 className=\"display-4\">Flashcard-o-matic</h1>\n        <p className=\"lead\">Discover The Flashcard Difference.</p>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h1>Not Found</h1>\n    </div>\n  );\n}\n\nexport default NotFound;\n","/**\n * Defines the base URL for the API.\n * The default values is overridden by the `API_BASE_URL` environment variable.\n */\nconst API_BASE_URL = process.env.API_BASE_URL || \"http://localhost:5001\";\n\n/**\n * Defines the default headers for these functions to work with `json-server`\n */\nconst headers = new Headers();\nheaders.append(\"Content-Type\", \"application/json\");\n\n/**\n * Removes the `cards` property from the deck so it is not accidentally saved with the deck.\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param deck\n *  the deck instance\n * @returns {*}\n *  a copy of the deck instance with the `cards` property removed.\n */\nfunction stripCards(deck) {\n  const { cards, ...deckWithoutCards } = deck;\n  return deckWithoutCards;\n}\n\n/**\n * Fetch `json` from the specified URL and handle error status codes and ignore `AbortError`s\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param url\n *  the url for the requst.\n * @param options\n *  any options for fetch\n * @param onCancel\n *  default value returned if the fetch is cancelled.\n * @returns {Promise<Error|any>}\n *  a promise that resolves to the `json` data or an error.\n *  If the response is not in the 200 - 399 range the promise is rejected.\n */\n\nasync function fetchJson(url, options, onCancel) {\n  try {\n    const response = await fetch(url, options);\n\n    if (response.status < 200 || response.status > 399) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    if (response.status === 204) {\n      return null;\n    }\n\n    return await response.json();\n\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      console.error(error.stack);\n      throw error;\n    }\n    return Promise.resolve(onCancel);\n  }\n}\n\n/**\n * Retrieves all existing decks.\n * @returns {Promise<[deck]>}\n *  a promise that resolves to a possibly empty array of decks saved in the database.\n */\nexport async function listDecks(signal) {\n  const url = `${API_BASE_URL}/decks?_embed=cards`;\n  return await fetchJson(url, { signal }, []);\n}\n\n/**\n * Saves deck to the database (public/data/db.json).\n * There is no validation done on the deck object, any object will be saved.\n * @param deck\n *  the deck to save, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<deck>}\n *  a promise that resolves the saved deck, which will now have an `id` property.\n */\nexport async function createDeck(deck, signal) {\n  const url = `${API_BASE_URL}/decks`;\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(stripCards(deck)),\n    signal,\n  };\n  return await fetchJson(url, options, {});\n}\n\n/**\n * Retrieves the deck with the specified `deckId`\n * @param deckId\n *  the `id` property matching the desired deck.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<any>}\n *  a promise that resolves to the saved deck.\n */\nexport async function readDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}?_embed=cards`;\n  return await fetchJson(url, { signal }, {});\n}\n\n/**\n * Updates an existing deck\n * @param updatedDeck\n *  the deck to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated deck.\n */\nexport async function updateDeck(updatedDeck, signal) {\n  const url = `${API_BASE_URL}/decks/${updatedDeck.id}?_embed=cards`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(stripCards(updatedDeck)),\n    signal,\n  };\n  return await fetchJson(url, options, updatedDeck);\n}\n\n/**\n * Deletes the deck with the specified `deckId`.\n * @param deckId\n *  the id of the deck to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n\n/**\n * Retrieves all cards associated with the specified `deckId`.\n * @param deckId\n *  the id of the target deck\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to a possible empty array of cards.\n */\nexport async function listCards(deckId, signal) {\n  const url = `${API_BASE_URL}/cards?deckId=${deckId}`;\n  return await fetchJson(url, { signal }, []);\n}\n\n/**\n * Creates a new card associated with the specified `deckId`.\n * There is no validation that there is an existing deck with the specified `deckId`.\n * @param deckId\n *  the id of the target deck\n * @param card\n *  the card to create, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the new card, which will have an `id` property.\n */\nexport async function createCard(deckId, card, signal) {\n  // There is a bug in json-server, if you post to /decks/:deckId/cards the associated deckId is a string\n  // and the card is not related to the deck because the data types of the ID's are different.\n  const url = `${API_BASE_URL}/cards`;\n  card.deckId = Number(deckId);\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(card),\n    signal,\n  };\n  return await fetchJson(url, options, card);\n}\n\n/**\n * Retrieves the card with the specified `cardId`\n * @param cardId\n *  the id of the target\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the saved card.\n */\nexport async function readCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  return await fetchJson(url, { signal }, {});\n}\n\n/**\n * Updates an existing deck\n * @param updatedCard\n *  the card to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated card.\n */\nexport async function updateCard(updatedCard, signal) {\n  const url = `${API_BASE_URL}/cards/${updatedCard.id}`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(updatedCard),\n  };\n  return await fetchJson(url, options, updatedCard);\n}\n\n/**\n * Deletes the card with the specified `cardId`.\n * @param cardId\n *  the id of the card to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n","import { deleteDeck } from \"../../utils/api\";\n\nexport function deleteClickHandler(setError, deck, decks, setDecks, push) {\n  if (\n    window.confirm(`Delete this deck?\\n\\nYou will not be able to recover it.`)\n  ) {\n    const deckId = deck.id\n    deleteDeck(deck.id)\n      .then(setDecks(decks.filter((deck)=> deck.id !== deckId)))\n      .then(push(\"/\"))\n  }\n}\n","import React from \"react\";\nimport { deleteClickHandler } from \"./Helper\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Deck({ deck, setError, decks, setDecks }) {\n  const { push } = useHistory();\n\n  const buttonStyle = {\n    margin: \"0px 5px\",\n  };\n\n  const divStyle = {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <div className=\"card-title h5\" style={divStyle}>\n          <span>{deck.name}</span>\n          <span> {deck.cards.length} cards</span>\n        </div>\n        <p className=\"card-text\">{deck.description}</p>\n        <div style={divStyle}>\n          <div>\n            <button\n              onClick={() => push(`/decks/${deck.id}`)}\n              className=\"btn btn-secondary\"\n              style={buttonStyle}\n            >\n              View\n            </button>\n            <button\n              onClick={() => push(`/decks/${deck.id}/study`)}\n              className=\"btn btn-primary\"\n              style={buttonStyle}\n            >\n              Study\n            </button>\n          </div>\n          <div>\n            <button\n              type=\"button\"\n              className=\"btn btn-danger\"\n              style={buttonStyle}\n              onClick={() => {\n                deleteClickHandler(setError, deck, decks, setDecks, push);\n              }}\n            >\n              Delete\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { listDecks } from \"../../utils/api\";\nimport Deck from \"./Deck\";\n\nfunction DeckList({ decks, setDecks }) {\n  const [error, setError] = useState(undefined);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    listDecks(abortController.signal).then(setDecks).catch(setError);\n\n    return () => abortController.abort();\n  }, [setDecks]);\n\n  if (error) {\n    return <div>NO DECKS HERE</div>;\n  }\n\n  const listForDesks = decks.map((deck) => (\n    <Deck\n      key={deck.id}\n      deck={deck}\n      decks={decks}\n      setDecks={setDecks}\n      setError={setError}\n    />\n  ));\n\n  return (\n    <main>\n      <section>{listForDesks}</section>\n    </main>\n  );\n}\n\nexport default DeckList;\n","import React, { useState, useEffect } from \"react\";\n\nfunction CardStudy({ card, index, lengthOfCards, handleNumber }) {\n  const [flip, setFlip] = useState(false);\n  const [text, setText] = useState(card.front);\n  useEffect(()=>{\n    setText(card.front)\n    setFlip(false)\n  },[card])\n\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <div className=\"card-title h5\">\n          Card {index + 1} of {lengthOfCards}\n        </div>\n        <p className=\"card-text\">{text}</p>\n        <button\n          type=\"button\"\n          className=\"btn btn-secondary\"\n          onClick={() => {\n            flip ? setText(card.front) : setText(card.back);\n            setFlip(!flip)}\n          }\n        >\n          flip\n        </button>\n        {flip ? (\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={handleNumber}\n          >\n            Next\n          </button>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\nexport default CardStudy;\n","import { useHistory, useParams, Link } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport { readDeck } from \"../../utils/api\";\nimport CardStudy from \"./CardStudy\";\n\nfunction DeckStudy() {\n  const { deckId } = useParams();\n  const [deck, setDeck] = useState(null);\n  const [error, setError] = useState(null);\n  const [number, setNumber] = useState(0);\n  const { push } = useHistory();\n\n  useEffect(() => {\n    async function getDeck(deckId, signal) {\n      try {\n        const deckFromAPI = await readDeck(deckId, signal);\n        setDeck(deckFromAPI);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"Aborted\", error);\n        } else {\n          setError(error);\n        }\n      }\n    }\n    if (deckId) {\n      const abortController = new AbortController();\n      getDeck(deckId, abortController.signal);\n      return () => {\n        abortController.abort();\n      };\n    }\n  }, [deckId]);\n\n  if (error) {\n    console.log(error);\n    return <div>NO DECK: FETCH ERROR</div>;\n  }\n\n  if (!deck) {\n    return <div>NO DECK FOUND</div>;\n  }\n\n  const handleNumber = () => {\n    if (number + 1 < listCards.length) {\n      setNumber(number + 1);\n    } else {\n      window.confirm(\n        `Restart Cards?\\n\\nClick 'cancel' to return to the home page.`\n      )\n        ? setNumber(0)\n        : push(\"/\");\n    }\n  };\n\n  const listCards = deck.cards.map((card, index, array) => (\n    <CardStudy\n      card={card}\n      index={index}\n      lengthOfCards={array.length}\n      handleNumber={handleNumber}\n    />\n  ));\n\n  return (\n    <div>\n      <header>\n        <nav aria-label=\"breadcrumb\">\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\">\n              <a href=\"/\">Home</a>\n            </li>\n            <li className=\"breadcrumb-item\">\n            <Link to={`/decks/${deckId}`}>{deck.name}</Link>\n          </li>\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\n              study\n            </li>\n          </ol>\n        </nav>\n      </header>\n      <h1>Study: {deck.name}</h1>\n      <div>\n        {listCards.length > 2 ? (\n          listCards[number]\n        ) : (\n          <div>\n            <h2>Not Enough cards</h2>\n            <p>\n              You need at least 3 cards to study. There are {listCards.length}{\" \"}\n              cards in this deck.\n            </p>\n            <button onClick={() => push(`/decks/${deckId}/cards/new`)}>\n              Add Cards\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default DeckStudy;\n","import React, { useState } from \"react\";\nfunction DeckForm({\n  onSubmit,\n  onCancel,\n  initialState = { name: \"\", description: \"\" },\n}) {\n  const [deck, setDeck] = useState(initialState);\n  function changeHandler({ target: { name, value } }) {\n    setDeck((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  }\n  function submitHandler(event) {\n    event.preventDefault();\n    event.stopPropagation();//What does this do\n    onSubmit(deck);\n  }\n  return (\n    <>\n      <form onSubmit={submitHandler} className=\"deck-edit\">\n        <fieldset>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Name</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              className=\"form-control\"\n              value={deck.name}\n              required={true}\n              placeholder=\"Deck Name\"\n              onChange={changeHandler}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"description\">Description</label>\n            <textarea\n              id=\"description\"\n              name=\"description\"\n              className=\"form-control\"\n              rows=\"4\"\n              required={true}\n              placeholder=\"Brief description of the deck\"\n              value={deck.description}\n              onChange={changeHandler}\n            />\n          </div>\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary mr-2\"\n            onClick={onCancel}\n          >\n            Cancel\n          </button>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit\n          </button>\n        </fieldset>\n      </form>\n    </>\n  );\n}\nexport default DeckForm;","import React from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { createDeck } from \"../../utils/api/index\";\nimport DeckForm from \"./DeckForm\";\n\nexport default function CreateDeck() {\n  const history = useHistory();\n  function submitHandler(deck) {\n    createDeck(deck).then((savedDeck) =>\n      history.push(`/decks/${savedDeck.id}`)\n    );\n  }\n  function cancel() {\n    history.goBack();\n  }\n\n  \n  return (\n    <>\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"/\">\n              <span className=\"oi oi-home\" /> Home\n            </Link>\n          </li>\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\n            Create Deck\n          </li>\n        </ol>\n      </nav>\n      <h1>Create Deck</h1>\n      <DeckForm onCancel={cancel} onSubmit={submitHandler} />;\n    </>\n  );\n}\n","import React, { useState } from 'react';\n\nexport default function CardForm({\n  onSubmit,\n  onCancel,\n  initialState = { front: \"\", back: \"\" },\n}) {\n  const [card, setCard] = useState(initialState);\n\n  function changeHandler({ target: { name, value } }) {\n    setCard((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  }\n\n  function submitHandler(event) {\n    event.preventDefault();\n    event.stopPropagation();//What does this do\n    onSubmit(card);\n  }\n\n  return (\n    <>\n      <form onSubmit={submitHandler} className=\"card-edit\">\n        <fieldset>\n          <div className=\"form-group\">\n            <label htmlFor=\"front\">front</label>\n            <textarea\n              id=\"front\"\n              name=\"front\"\n              className=\"form-control\"\n              value={card.front}\n              required={true}\n              placeholder=\"card's Question\"\n              onChange={changeHandler}\n            />\n          </div>\n          <div className=\"form-group\">\n          <label htmlFor=\"back\">back</label>\n            <textarea\n              id=\"back\"\n              name=\"back\"\n              className=\"form-control\"\n              value={card.back}\n              required={true}\n              placeholder=\"card's Answer\"\n              onChange={changeHandler}\n            />\n          </div>\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary mr-2\"\n            onClick={onCancel}\n          >\n            Cancel\n          </button>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit\n          </button>\n        </fieldset>\n      </form>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory, Link } from \"react-router-dom\";\nimport { createCard, readDeck } from \"../../utils/api\";\nimport CardForm from \"./CardForm\";\n\nexport default function CardAdd() {\n  const { deckId } = useParams();\n  const history = useHistory();\n  const [deck, setDeck] = useState(null);\n  useEffect(() => {\n    readDeck(deckId).then(setDeck);\n  }, [deckId]);\n\n  function submitHandler(card) {\n    createCard(deckId, card).then(history.push(`/decks/${deckId}`));\n  }\n  function cancel() {\n    history.goBack();\n  }\n\n  return (\n    <>\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"/\">\n              <span className=\"oi oi-home\" /> Home\n            </Link>\n          </li>\n          <li className=\"breadcrumb-item\">\n            <Link to={`/decks/${deckId}`}>{deck && deck.name}</Link>\n          </li>\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\n            Add Card\n          </li>\n        </ol>\n      </nav>\n      <h1>Add Card</h1>\n      <CardForm onCancel={cancel} onSubmit={submitHandler} />;\n    </>\n  );\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { deleteCard } from \"../../utils/api/index\";\n\nexport default function CardUnit({\n  card,\n  deckId,\n  setCards,\n  cards,\n}) {\n  const history = useHistory();\n  const deleteClickHandler = () => {\n    if (\n      window.confirm(\n        `Delete this card?\\n\\n You will not be able to recover it.`\n      )\n    ) {\n      const cardId = card.id\n      deleteCard(card.id)\n        .then(setCards(cards.filter((card) => card.id !== cardId)))\n    }\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <div className=\"card-text d-flex justify-content-between\">\n          <p className=\"text-start\">{card.front}</p>\n          <p className=\"text-end\">{card.back}</p>\n        </div>\n        <div className=\"d-flex justify-content-end\">\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary mr-2 \"\n            onClick={() => {\n              history.push(`/decks/${deckId}/cards/${card.id}/edit`);\n            }}\n          >\n            Edit\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-danger mr-2\"\n            onClick={deleteClickHandler}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { readDeck } from \"../../utils/api\";\nimport { deleteClickHandler } from \"../home/Helper\";\nimport CardUnit from \"../card/CardUnit\";\n\nfunction DeckProfile({ decks, setDecks }) {\n  const { deckId } = useParams();\n  const [deck, setDeck] = useState(null);\n  const [cards, setCards] = useState([]);\n  const [error, setError] = useState(null);\n  const { push } = useHistory();\n\n  useEffect(() => {\n    async function getDeck(deckId, signal) {\n      try {\n        const deckFromAPI = await readDeck(deckId, signal);\n        setDeck(deckFromAPI);\n        setCards(deckFromAPI.cards);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"Aborted\", error);\n        } else {\n          setError(error);\n        }\n      }\n    }\n    if (deckId) {\n      const abortController = new AbortController();\n      getDeck(deckId, abortController.signal);\n      return () => {\n        abortController.abort();\n      };\n    }\n  }, [deckId]);\n\n  if (error) {\n    console.log(error);\n    return <div>NO DECK: FETCH ERROR</div>;\n  }\n\n  if (!deck) {\n    return <div>NO DECK FOUND</div>;\n  }\n\n  const listForCards = cards.map((card) => (\n    <CardUnit\n      key={card.id}\n      card={card}\n      deckId={deckId}\n      setCards={setCards}\n      cards={cards}\n      deck={deck}\n      setDeck={setDecks}\n    />\n  ));\n\n  return (\n    <div>\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <a href=\"/\">Home</a>\n          </li>\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\n            {deck.name}\n          </li>\n        </ol>\n      </nav>\n      <div className=\"mb-5\">\n        <div className=\"card-title h5\">{deck.name}</div>\n        <p className=\"card-text\">{deck.description}</p>\n        <div className=\"d-flex justify-content-between\">\n          <div>\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary mr-2\"\n              onClick={() => push(`/decks/${deckId}/edit`)}\n            >\n              Edit\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-primary mr-2\"\n              onClick={() => push(`/decks/${deck.id}/study`)}\n            >\n              Study\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-primary mr-2\"\n              onClick={() => push(`/decks/${deckId}/cards/new`)}\n            >\n              Add Cards\n            </button>\n          </div>\n          <div>\n            <button\n              type=\"button\"\n              className=\"btn btn-danger mr-5\"\n              onClick={() => {\n                deleteClickHandler(setError, deck, decks, setDecks, push);\n              }}\n            >\n              Delete\n            </button>\n          </div>\n        </div>\n      </div>\n      <h2>Cards</h2>\n      {listForCards}\n    </div>\n  );\n}\n\nexport default DeckProfile;\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { readDeck, updateDeck } from \"../../utils/api\";\nimport DeckForm from \"./DeckForm\";\nfunction DeckEdit() {\n  const history = useHistory();\n  const { deckId } = useParams();\n  const [deck, setDeck] = useState({ name: \"\", description: \"\" });\n  useEffect(() => {\n    readDeck(deckId).then(setDeck);\n  }, [deckId]);\n  \n  function submitHandler(updatedDeck) {\n    updateDeck(updatedDeck).then((savedDeck) =>\n      history.push(`/decks/${savedDeck.id}`)\n    );\n  }\n  function cancel() {\n    history.goBack();\n  }\n  const child = deck.id ? (\n    <DeckForm onCancel={cancel} onSubmit={submitHandler} initialState={deck} />\n  ) : (\n    <p>Loading...</p>\n  );\n  return (\n    <>\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"/\">\n              <span className=\"oi oi-home\" /> Home\n            </Link>\n          </li>\n          <li className=\"breadcrumb-item\">\n            <Link to={`/decks/${deckId}`}>{deck.name}</Link>\n          </li>\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\n            Edit Deck\n          </li>\n        </ol>\n      </nav>\n      <h1>Edit Deck</h1>\n      {child}\n    </>\n  );\n}\n\nexport default DeckEdit;","import React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory, Link } from \"react-router-dom\";\nimport { readDeck, readCard, updateCard } from \"../../utils/api\";\nimport CardForm from \"./CardForm\";\n\nfunction CardEdit() {\n  const { deckId, cardId } = useParams();\n  const history = useHistory();\n  const [deck, setDeck] = useState(null);\n  const [card, setCard] = useState({ front: \"\", back: \"\" });\n\n  useEffect(() => {\n    readDeck(deckId).then(setDeck);\n    readCard(cardId).then(setCard);\n  }, [deckId, cardId]);\n\n  function submitHandler(updatedCard) {\n    updateCard(updatedCard).then(history.push(`/decks/${deckId}`));\n  }\n  function cancel() {\n    history.goBack();\n  }\n\n  const child = card.id ? (\n    <CardForm onCancel={cancel} onSubmit={submitHandler} initialState={card} />\n  ) : (\n    <p>Loading...</p>\n  );\n\n  return (\n    <>\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"/\">\n              <span className=\"oi oi-home\" /> Home\n            </Link>\n          </li>\n          <li className=\"breadcrumb-item\">\n            <Link to={`/decks/${deckId}`}>{deck && deck.name}</Link>\n          </li>\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\n            Edit Card {card.id}\n          </li>\n        </ol>\n      </nav>\n      <h1>Edit Card</h1>\n      {child}\n    </>\n  );\n}\n\nexport default CardEdit;\n","import React, { Fragment, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport DeckList from \"./home/DeckList\";\nimport DeckStudy from \"./deck/DeckStudy\";\nimport CreateDeck from \"./deck/CreateDeck\";\nimport CardAdd from \"./card/CardAdd\";\nimport DeckProfile from \"./deck/DeckProfile\";\nimport DeckEdit from \"./deck/DeckEdit\";\nimport CardEdit from \"./card/CardEdit\";\nimport { useHistory } from \"react-router\";\n\nfunction Layout() {\n  const [decks, setDecks] = useState([]);\n  const { push } = useHistory();\n  return (\n    <Fragment>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <div className=\"container\">\n            <button\n              onClick={() => push(\"/decks/new\")}\n              className=\"btn btn-secondary mb-2\"\n            >\n              Create Deck\n            </button>\n            <DeckList decks={decks} setDecks={setDecks} />\n          </div>\n        </Route>\n        <Route path=\"/decks/new\">\n          <CreateDeck decks={decks} setDecks={setDecks}/>\n        </Route>\n        <Route path=\"/decks/:deckId/cards/new\">\n          <CardAdd />\n        </Route>\n        <Route path=\"/decks/:deckId/cards/:cardId/edit\">\n          <CardEdit />\n        </Route>\n        <Route path=\"/decks/:deckId/edit\">\n          <DeckEdit />\n        </Route>\n        <Route path=\"/decks/:deckId/study\">\n          <DeckStudy />\n        </Route>\n        <Route path=\"/decks/:deckId\">\n          <DeckProfile decks={decks} setDecks={setDecks}/>\n        </Route>\n        <Route>\n          <NotFound />\n        </Route>\n      </Switch>\n      {/* TODO: Implement the screen starting here */}\n    </Fragment>\n  );\n}\n\nexport default Layout;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./Layout\";\n\n/**\n * App is a wrapper for <Layout>, you should not need to change this file.\n */\n\nfunction App() {\n  return (\n    <div className=\"app-routes\">\n      <Switch>\n        <Route path=\"/\">\n          <Layout />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}